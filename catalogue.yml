- name: Configuration of catalogue moudule
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable default nodejs version
    ansible.builtin.command: "dnf module disable nodejs -y"

  - name: Enable specific nodejs version
    ansible.builtin.command: "dnf module enable nodejs:20 -y"

  - name: Installing nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present
  
  - name: Create a App directory 
    ansible.builtin.file:
     path: /app
     state: directory

  - name: Create system user
    ansible.builtin.user:
     name: roboshop
     shell: /sbin/nologin
     system: true
     home: /app

  - name: Download the code
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
     dest: /tmp/catalogue.zip

  - name: Unzipping the zip file
    ansible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app
     remote_src: yes

  - name: Installing dependencies 
    community.general.npm:
     name: package.json
     path: /app

  - name: Creating Catalogue service
    ansible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service

  - name: systemd reload
    ansible.builtin.systemd_service:
     daemon_reload: true

  - name: Starting and Enable catalogue service
    ansible.builtin.service:
     name: catalogue
     state: started
     enabled: yes

  - name: Creating Mongodb repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongodb.repo

  - name: Installing Mongodb client
    ansible.builtin.dnf:
     name: mongodb-mongosh
     state: present 

  - name: Check if data is already loaded or not
    ansible.builtin.shell: mongosh --host mongodb.vallalas.store --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: db_output

  - name: Load the data
    ansible.builtin.shell: mongosh --host mongodb.vallalas.store < /app/db/master-data.js
    when: db_output.stdout | int < 0

